#!/usr/bin/env python
# This program logs data from speclab instruments.
#
# Timothy Crone (tjcrone@gmail.com)

# imports
import sys, serial, time, argparse

# parse arguments
parser = argparse.ArgumentParser(description='Log data from SpecLab instruments.')
parser.add_argument("-d", dest="device", nargs='+', metavar=('name', 'port'),
  default=[], action='append',
  help="device [and port] to log (options: mb, ir)")
parser.add_argument("-i", dest="interval", metavar="seconds", type=int, default=5,
  help="interval between log entries (default: 5)")
args = parser.parse_args()

# default devices
if not args.device:
  args.device = [['mb', mb_port], ['ir', ir_port]]

# check number of device arguments
for dev in args.device:
  if len(dev)>2:
    parser.error("argument -d: device option takes a maximum of two arguments")

# define ports for each instrument
mb_port='/dev/tty.usbserial-FT97SF3N'

# open mass balance serial port
mb = serial.Serial(
  port=mb_port,
  baudrate=9600,
  parity=serial.PARITY_NONE,
  stopbits=serial.STOPBITS_TWO,
  bytesize=serial.SEVENBITS,
  timeout=0)

# initialize some counters
total_seconds = 0 # total number of seconds elapsed
n = 0 # number of subsamples collected on the interval

# infinite loop to log data
while True:
  # collect a subsample every one second
  time.sleep(1 - time.time() % 1)
  mb_time = time.strftime('%Y,%m,%d,%H,%M,%S', time.gmtime())

  # increment counters
  total_seconds = total_seconds+1
  n = n+1

  # read data from serial port
  mb_waiting = mb.inWaiting()
  mb_data = mb.read(mb_waiting).split('\n')

  # log sample according to the logging inverval
  if n==args.interval or total_seconds==1:
    n = 0
    # print results to screen
    if len(mb_data)>1:
      mb_value = mb_data[-2].split('G')[0].replace(' ','')
    else:
      mb_value = 'nd'
    sys.stdout.write('%s,%s\n' % (mb_time, mb_value))
    sys.stdout.flush()

  # flush input buffer (I don't know if this is necessary)
  #mb.flushInput()
